{
  "hash": "a1c7a81b0d54a0795afaf02949f7b5bd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AI Code Test\"\nformat: html\nauthor: \"Barrie Robison\"\ndate: \"2025-02-27\"\ncategories: [Example, AI, LLM, Tabular]\nimage: \"AIcode.png\"\ncode-fold: true\n---\n\n\n\n# AI CODE\n\nThis post is a brief example of how AI tools such as GPT-4o or Claude can accelerate your programming.\n\n## A Zero Shot Example\n\nOur example in class was this prompt:\n\n:::.callout-note\nI want to use the tidyverse to create a parralel axis plot of microbiome data. I have 10 microbial species that will be the axes and a want to plot the abundance for 58 different samples. the samples are equally divided between normal baby poop and baby poop from sick babies.\n\n:::\n\n\nI put that prompt into AnythingLLM (pointed at the OpenAI API) and after a brief interaction:\n\n:::.callout-note\nAda says you suck because of this error\nError in `[.data.frame`(data, , columns) : undefined columns selected\n:::\n\nWe got this response and this code:\n\nThe error you’re encountering is due to the columns argument in ggparcoord, which specifies the numeric indices of the columns to be plotted. We need to adjust those indices based on the actual column positions in your dataset. Let’s refine the code.\n\nMake sure the column indices in the columns argument match the positions of your microbial species in the dataset and that groupColumn correctly refers to the column with the grouping variable (Condition).\n\nHere’s the corrected code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n\n```{.r .cell-code}\n# Example microbiome data, replace this with your actual dataset\nset.seed(123)  # For reproducibility\ndata <- tibble(\n  SampleID = 1:58,\n  Condition = rep(c(\"Normal\", \"Sick\"), each = 29),\n  Species1 = runif(58, 5, 15),\n  Species2 = runif(58, 10, 20),\n  Species3 = runif(58, 0, 5),\n  Species4 = runif(58, 3, 8),\n  Species5 = runif(58, 1, 6),\n  Species6 = runif(58, 2, 7),\n  Species7 = runif(58, 4, 9),\n  Species8 = runif(58, 5, 10),\n  Species9 = runif(58, 6, 12),\n  Species10 = runif(58, 0, 8)\n)\n\n# Create parallel coordinates plot\nggparcoord(data, columns = 3:12, groupColumn = 2, scale = \"globalminmax\") +\n  labs(title = \"Parallel Coordinates Plot of Microbial Abundance\",\n       x = \"Microbial Species\",\n       y = \"Abundance\") +\n  theme_minimal() +\n  scale_color_manual(values = c(\"Normal\" = \"blue\", \"Sick\" = \"red\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](AIisstuff_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\nIn this code, the `columns` argument is set to `3:12` to refer to the species columns, assuming these are from the 3rd to the 12th columns in your dataset. Adjust these indices if your data structure differs. The `groupColumn` is set to `2`, assuming the `Condition` column is the second column. Please ensure your actual dataset aligns with these assumptions.\n\n\n## What About Python?\n\nThen we decided to change programming languages entirely!\n\n:::.callout-note\nI’ve changed my mind. I want to use Python instead.\n:::\n\nI'll spare you the brief iterations, but we ended up with this:\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n# Example microbiome data\nnp.random.seed(123)  # For reproducibility\ndata = pd.DataFrame({\n    'SampleID': range(1, 59),\n    'Condition': ['Normal'] * 29 + ['Sick'] * 29,\n    'Species1': np.random.uniform(5, 15, 58),\n    'Species2': np.random.uniform(10, 20, 58),\n    'Species3': np.random.uniform(0, 5, 58),\n    'Species4': np.random.uniform(3, 8, 58),\n    'Species5': np.random.uniform(1, 6, 58),\n    'Species6': np.random.uniform(2, 7, 58),\n    'Species7': np.random.uniform(4, 9, 58),\n    'Species8': np.random.uniform(5, 10, 58),\n    'Species9': np.random.uniform(6, 12, 58),\n    'Species10': np.random.uniform(0, 8, 58)\n})\n\n# Define colors for each condition\ncolor_map = {'Normal': 'rgba(0, 0, 255, 0.3)', 'Sick': 'rgba(255, 0, 0, 0.3)'}\ncolors = [color_map[condition] for condition in data['Condition']]\n\n# Get the column names for species\nspecies_cols = [col for col in data.columns if col.startswith('Species')]\n\n# Create the parallel coordinates plot using graph_objects\ndimensions = [\n    dict(range=[data[col].min(), data[col].max()],\n         label=f'Species {i+1}',\n         values=data[col])\n    for i, col in enumerate(species_cols)\n]\n\nfig = go.Figure(data=\n    go.Parcoords(\n        line=dict(color=data['Condition'].astype('category').cat.codes, \n                 colorscale=[[0, 'blue'], [1, 'red']],\n                 showscale=True,\n                 colorbar=dict(title='Condition'),\n                 ),\n        dimensions=dimensions\n    )\n)\n\nfig.update_layout(\n    title='Parallel Coordinates Plot of Microbial Abundance',\n    font=dict(size=12)\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div>                        <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-3.0.0.min.js\"></script>                <div id=\"10166029-4b46-4df2-bec1-996d440d60b6\" class=\"plotly-graph-div\" style=\"height:100%; width:100%;\"></div>            <script type=\"text/javascript\">                window.PLOTLYENV=window.PLOTLYENV || {};                                if (document.getElementById(\"10166029-4b46-4df2-bec1-996d440d60b6\")) {                    Plotly.newPlot(                        \"10166029-4b46-4df2-bec1-996d440d60b6\",                        [{\"dimensions\":[{\"label\":\"Species 1\",\"range\":[5.596778966095684,14.85559785610705],\"values\":{\"dtype\":\"f8\",\"bdata\":\"mUpIF+ztJ0BacSQZEXIfQCVVdHn1Eh1AlkFMS7sGJUDtUDpermMoQL83cxlOdiJA2f0GQIOdLUAdAfMIVLInQIiR2Q9fniNAt6YARqTXIUCeexFKEt0gQOJ0Twi8lChAXKWcaX3FIkBgSXkGGmMWQPgY\\u002fJD89SFAzliUVonCKEB5hzMft0wbQH4ra0CgBBtALeRHBIuhJEAn1REO9aIkQFuUPgYisCZAK++6PRf9KkApylkVNn0oQE7yZLxwOCZArQOL\\u002fehyKECKBSO1jHUgQKA7b6BbPCFALS0sXWohHUBLovC\\u002fob8fQMc8agaZniZA0JDikievF0CQ6BHNjKwiQNhM73AEniJA1pxi7qrfI0DZVTFHQIQiQJiDuQfHPiBADD5gL+uGIkAvxzsLJ94rQE+HR2sZ4ixArSEpXmcJJECvy+uco3omQGhDg6\\u002funxhAEkc+bYBYIEDLSTUD6UsiQOmvSr2AUytA1m2LtqkEHkBfHb2rIqkjQNYDFewQti1AQJcXicNjJEDO\\u002fOAcBUImQLuKZ8880xhA0ov+ad2GKkAM7rT4qg8mQD5jlYm\\u002f5iRApD6GafPaIEADHFozGRUgQFMiOVonVyJAd2UsikKgJ0A=\"}},{\"label\":\"Species 2\",\"range\":[10.161292066950168,19.953584820340176],\"values\":{\"dtype\":\"f8\",\"bdata\":\"fbJVZSvBMkCUUSTEXDUuQJvZFXtxsTBAu7YXwv63L0CPkFbCwD8wQK6eaTc0vzBAhx44imVsMkAalMlV9aklQKgn3S8HozFATGrzY5LfKEDEXDzra+InQOzeh8j6ci9Ad1xNTwzqJUBjO\\u002fPJb9oyQCIZ5uLBRTBAOyz+JPI7MUB4T7HflFIkQFBTxsB94y9AW5zEfL0iL0AotbOV3y0nQADb6JW4DydAybtiO470MECCdceHFWAqQE8gI6dx6zBAusKLNnEWL0D4YuhLbccrQF+XEdRWQDNAN6Vj2axqMkADfHsj4CUrQG8IFDQw3yRA00\\u002fzm2kYKkC4dt\\u002fvtfYrQG0mstGxDDFAtlKBIh70M0CcVZi7SB4rQIZy0lUfoDFAh4kb2RDdL0AwBNiwweowQI1BO8bFBSdA2itoIj\\u002f6K0ALb2ukLtEoQJwKr6p+3ipAydSSVTdDLkBsp7AQj6owQCfCmV5AHiZAdEY2oS6eJkB2jaZrinAqQIPQvc2anTBASvvdUQ53MkA+eYt3rRAvQDUJc\\u002ftlizJATt+xnV6yK0BQ14U79FUqQNziq8vVFStA4oMLYPBrJ0A23JJBh0oyQLk2sqb+xSpAw4pNgSIML0A=\"}},{\"label\":\"Species 3\",\"range\":[0.01344032287160346,4.9417270964141],\"values\":{\"dtype\":\"f8\",\"bdata\":\"gDXn9V0kB0BTxouff9wEQEAic5mZhos\\u002fImyjG1TEE0C1g19PWRsSQGMzaedhnPA\\u002fopN95C5m9z\\u002fuXmlq58wEQGlcPUbJCRJAuaBorDCsE0DB4yYjdpr0P0mNll4JkwZAiE5h\\u002fq0jEEDz6VPesoz\\u002fP6OXXRkwPg1AupZbB2PF6T\\u002fl+O9AJwcIQCSg39w5URFAcsWQcaGrE0B6U55CpWXZPyraBq5GIgFACpTeqgld8D+5fI6FhAYCQPA9\\u002f1YZ6QVATCAa+VLd3T+aYCxstb\\u002f3PwnFGjc7jRJASMlHJJnCBkBUelYb5ksCQFOOXiwbJA5AyBGMHqusDUDg9ldRMBfPP5x6R7MPWQxA8ip0Cu3IEEDsziXU0IzqP04hDjxrPQ9AaqPcGEXs9j9CF+0jgIT4PxSjBgRHnApAfrDNk5\\u002fS4T8E3XA7S5gKQD6EwafTwRFATksENjraC0BZzecb9ZwBQGd6PbdQhwFAQgEGgpWaDkDJXVSRLKAGQD7+QFtZK9s\\u002fO5TrS41OB0AgkzHw\\u002f0sQQBUUt5ke9\\u002fo\\u002fnjykLDGNEkBNAcmSVwcOQC5usd9p9gZA4wU0ntUQDkCsjVoD4lPZPwbCA3MSMBFAf4QK3xluEEA=\"}},{\"label\":\"Species 4\",\"range\":[3.0371318927230653,7.9804316368391275],\"values\":{\"dtype\":\"f8\",\"bdata\":\"balP+4oyHkCV7GX3LiUNQNRObZdtRQtAVCl+HmCJDUAuNLSp0fwTQLs5LH1zfBRACTCV344+F0ATvnghxuMMQB5GvVoqBxBAG0Ptep47HECPKU6sGFwVQAZrGsWkKBxAuxJHzgtMCEBRHiieJwgXQHSb6Rp+ox5AUU6PBL2kF0CldLjKNR8QQJryKDHrWhpAjRI6VWiUE0DwAxU1IF4ZQN5C9uQ7LAlAD5OqUc+3GEDnSF70tEkJQPqLeuZG5RpAx1jBh1B1FUDNF9S8w94MQCPtucJL2hZAcWZKMsWrCkDGVHhnOhEZQE\\u002fAYEX26x9APj5HelBjG0DqHs00uXkXQPQShSz8GgxAkYW7hCb\\u002fGUBmynLyLTkZQDAXni7B9glAr1J5ipLYG0C8WMM11F8WQEw73E1xhBRAPuYysYTDG0AMcSIDPDsUQPY5hMLanhVAuMYDHeFDD0AgVqMbJ20SQJSAXgIh6RxA\\u002fJmt9uR5D0Ay3EW9h1gUQM2QPU\\u002fbxx9AnUzuGmS7EEDKwLV5LlYeQJAW0+0xXh5AfEkg4t+mC0AIsUnm5kUVQBqRuv5YCxZAEuSMKvxFEkASwanBweQJQFijzTJu1RBAtSc7OTnSC0A=\"}},{\"label\":\"Species 5\",\"range\":[1.0277270420345226,5.965166305473959],\"values\":{\"dtype\":\"f8\",\"bdata\":\"TGU01a2HAUCoVMDu4ycUQIYCBvFJ5hVATqa5bzR18z9sKbOD7xMEQHsLCLOUnBdAYhqkhYeUDUAIc+I0tIYQQKoMLOmRcfA\\u002fTUvsAnllC0CaIhb6PcQXQFfYYlnmAQdAAHDRa1fD9z\\u002fX5Joa8nkKQBzGsjaVQhdAmlWRcVisBUDNyT8BfPoTQDDL\\u002fdwX+hNAT6g9anZUAEAujgXUFbwJQNJFQ+fgTxJA4ox8\\u002fLhrCECQ9dGL0kf\\u002fP8L+RyOSWRdAj4M1hdcDEUBe1l2JJ08VQDzfIaf2BPI\\u002fNJtBlB2tAkDHzeZDNRUMQAR5oxlZZfU\\u002f4thUjlTcF0BULOD7X3UBQADjnH\\u002fA+AZAYm3rZHuPAEBatMEFiG\\u002f4PyYNJs+XTAFAtEsBbz8GBEAwkFwrWLAQQJqEARvYPwNA5M7TyrZ9BkAiBtOdtXnwP4Aw1772oAZAMHtfEf5aDUCiSX2XFfb8P6c3Lgy35Q9A6dB7m+G5A0B74Xs5GaQQQNh8YaiBGPI\\u002fHg0hgHrAFUDk+YkLHErxP94exbgZKPo\\u002f632yYRKLE0BKDewx76vzPy3UKTVQOBJA4\\u002fXnmMFrF0AhjQ5BBG8VQETqYRQHNBJAK4Lv45ErF0A=\"}},{\"label\":\"Species 6\",\"range\":[2.0176610548312417,6.741261858090706],\"values\":{\"dtype\":\"f8\",\"bdata\":\"OyYw8KSYEEBcmr\\u002fZI3UZQLhITKsBPQ5AXqGs0GOYGkAkav2ye\\u002fMFQB4pmNTyzBpAHp4rxoGnGEAXh13\\u002fzOsYQBnPMbz49ARAnWexTgPuE0BKf7Ln26cAQBt6s8V2bBZAgOzUbTtPAEAO+8+ClGQDQD5Ql40aBQlAQEGiOqOAGUCdRsaABYsOQKzDSUmYzBJApBmSPrBcE0AcatarvgQJQHIbNDZkcRNAXbGdvBI4FUA2OWNnCO4LQKbtupheXxBA2hsWt9APEUBKi7qooqUaQDOUAM73vxNATBY5WQ33GkDhNlnf5R4TQEC5k93fAhJA602neiskAEAU9DjjJp4RQC7E0tCRjBpACLt4wEPvB0Dak4jIaRUCQHd3Mzu1IhBAbuOzB1flDkC+d\\u002fCnnyQZQKiaWXF\\u002fEAFAHxeZ\\u002fylnGkAYosgtOZ4VQGX6TRijFRpA1ODygIwmFEAq1xdyMz0YQMv5wCH4aw1A8pOO5I77DUAJhwDnT5gPQE5teaGPGBdAIuYCqIrFDkAFHIWwVLAJQIExKqvcwBpA+sOeSQQpGkBNDH08r\\u002fMNQOcYu89YsRRAIZJk7ST0CkClbGlxnj4IQCW7F+UddA1A+1gUvoAVDUA=\"}},{\"label\":\"Species 7\",\"range\":[4.03013942826649,8.796726126294484],\"values\":{\"dtype\":\"f8\",\"bdata\":\"i9E2d6DSIED6JCwHGTkgQHzdrltFMR5AbpugfOyXIUBn0xYGbHMYQAW5TLSR5hRAdcfGehRZEkCmgFyoZAUWQHj11RTA5xJARNxaKf7XEUDGO\\u002fNJAw8cQAZaLsajSBdAzNayo5lKG0ARB02Oo9MTQGSWYQzCiR1AHS3DTGNPFEDF8LQVe48VQIeWczjQ1R5AmoSSp9sxG0DdeXfIXLIWQHyHzkEa3BpAMwI2oTPhHUBxxjnoDh8hQFqvTWxAnRtAS2THsFqnFED4tsOEF+8eQFbKHGgtjh9Axsz0Ag4CFECJkkaFqzQgQNwZrGl3TBlAfKljwmeYH0DoPNdz478UQEWlcpzPphZAeXiw8XaJIUCd4mdfAygdQKwmFG4idR9A+sLmBHrEHUBm8Ut+CRYUQCB2ByjtaRlAHm1JkPIWIEALiqIKLoAdQBvmyt7cHhBAnjiSE4e\\u002fEUCq2pLGlu8WQPhPaWaTcSFA0NjtL+XSGUBnX+9vTWcVQJQg25NeNRdAMTmrnIo2FEDmXsRWi2wYQPitTGlXXBRAwcL5XCB1IEBjMuT\\u002fGiAZQHu6AhqWmBVAwsra3jNUIUCL0DGbekkWQKWt1ZneGCFAHnHP9UzeEEA=\"}},{\"label\":\"Species 8\",\"range\":[5.0657991564543075,9.936755489151954],\"values\":{\"dtype\":\"f8\",\"bdata\":\"XpYH7TYSIUCH7o4Kg60dQDL2821p4hxAT3bhu\\u002fm5FED+JX1FTNAUQIgiKtKypxpAyAz9QqB4I0CcjoGkNS0gQDS86qGjYBtA9m+2RakeIEDDYiy6ZB8YQP1EUOMjTRdA57RTIIE8G0DalKFAL6IiQATnNQgjMB5AtvBPwSLwGUC2ba7npIAjQHemWYnfKCJAke4DaKB1GkA7iFVOkrgjQCODXGqe3yNAkVewAlcsHEDr98PDKY8gQANRocLxHBxAtt0kT58lGUAm7faDLqcVQD5EVVqvRRlAzfHWEvptGUC17uo2CPkbQKDRjtGdshdADZbFbcaJI0DmkC65vg4WQOQcDqqIQCBAJ763mX3VHEBjZ8CTaXgcQGvP2BGZcBtAhEN8uuKuIkBuLb\\u002fJCpwZQMKovZRZaRRA2\\u002f50D1QuI0AIKHLLEaUiQGAH2ba8iRlAK2JumUF4HkDGmPgUiC4WQJ3MQbpY3hVAzE\\u002fwyelfIkC5mDh7jzQcQGrpQY3+nSBAd0gC65duI0C+HKiREecYQHRNpNpgQxRAONZlzKN7FEAqOOMBBxghQHZuvlLaPiNAsGusIrtYHUBuLwYQj4AbQHikDQRy2x5A1\\u002fUZvdOWIkA=\"}},{\"label\":\"Species 9\",\"range\":[6.000491325682006,11.993510435836786],\"values\":{\"dtype\":\"f8\",\"bdata\":\"BM7erGrTI0CmADWxbZcdQMyJzqiCSyVABNlPuRA7G0BgW1tRM\\u002fkbQO8J+vMoWiNAxQrF0hW7HUCjFBhnFHUkQDXv9Y24MSBA0prQKH6oHkCyTlxmrfwnQGQN4KOL+RhAZspTf\\u002fe\\u002fI0Cl6R8vxe0YQHImbqxdHyVAjjz+NayFHUBqJU1P7ScaQPL\\u002flJoJyCNAH2VfCo3KJEBexM3aGyMkQI+\\u002fnSHhPhlAymCzzDgQH0D8c29PvmkhQDSuvm324x5AP8rrt+W5JUAea486kiUbQIv3lHCdWCNArZTD2svbJ0CT4ABYp9QmQDXGjtjuVB1AkPFOzIAAGEDCaAAhZcQnQIBb7LyxlyZACmUVkp4IJ0BVotpJbfwgQIO1WG117yRAfuqNAKMbHUCwt6h5KLUgQFQqHKP0NyZAuhFmrAwQG0AOiDhU9LkmQBCn+sFF9SFAxYMpQvccIUDfAlgz5FUfQJ98UTmPACdATFhLpyM2IkAEXp0Q+KUlQF28dM+0SiZAmon4\\u002f44RJ0AMzoWi+EcfQABbKyHmEyBASGeDIxEkI0CMzihsv0shQAcJ9zexMSdAFPmdF1HFIEAEODbyu7shQOCW1uP+ZyNAmuJbFVzbIEA=\"}},{\"label\":\"Species 10\",\"range\":[0.27162908902576,7.939827487400852],\"values\":{\"dtype\":\"f8\",\"bdata\":\"9RIJI2LCH0AgM1laUU7pP9x9r8G6PPw\\u002fxgIEtWGmBED88iYHlejyP4JCTd+lMAJA0ZYM05PvGEBgi2QBiLsQQKCBgPleYtE\\u002fEhR266RxH0Clu2g3U7YTQBAnFrpQLd4\\u002fBCWAaUsoFUCibDwqNDcIQNDcCxu+XfE\\u002fNkkNVIoJEkC6ph8sPUQXQCWXNYDeeRVA7JLO0YKu\\u002fz9nSv0+tMsQQGFAkfeJNBFAHoTTmw3wFkAWaKYPEQgHQJmL6YEGhxlAImquj+8XFEBgchhNM6DTP\\u002fiZwJLBfBFARQC9rMiUG0A8WEdKkSkSQGgc7GSKgfY\\u002f62hp0wBVEEAik5d55jgYQFBH2qnaL+w\\u002fYf6Y96wlGkCI5bzVCXD1PzMsdJUnFxFAmn5tbgWwCEA0GzxT59L\\u002fP82qt2PEtxRAYLmc+A4l0z\\u002fooG2VS1IYQOiESZ2y3BBAwA2CWFEGHEA8sE93uakQQGALQhLe79E\\u002fSOiCPIRh8j\\u002f9UBjBl3UZQOCmEByJfA9AjHnu\\u002fr9HDEA0N\\u002ftGPGEEQBhDKtcNNgJAXIV5aYroHkBmsfj+xLULQLXtXLrASRxAbIsUl8C9FEC1SFdBPXgbQG9riURERxtAThqErhuaHkA=\"}}],\"line\":{\"color\":{\"dtype\":\"i1\",\"bdata\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ==\"},\"colorbar\":{\"title\":{\"text\":\"Condition\"}},\"colorscale\":[[0,\"blue\"],[1,\"red\"]],\"showscale\":true},\"type\":\"parcoords\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermap\":[{\"type\":\"scattermap\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"font\":{\"size\":12},\"title\":{\"text\":\"Parallel Coordinates Plot of Microbial Abundance\"}},                        {\"responsive\": true}                    )                };            </script>        </div>\n```\n\n:::\n\n```{.python .cell-code}\n\n# fig.show()\n```\n:::\n\n\n\n\nWhat do you think?\n\n",
    "supporting": [
      "AIisstuff_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}