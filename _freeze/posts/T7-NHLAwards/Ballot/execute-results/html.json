{
  "hash": "627046f92d11043e131813d6209e1919",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"BarrieBallots\"\nsubtitle: \"Data Driven NHL Award Voting\"\nauthor: \"Barrie Robison\"\ndate: \"2025-03-04\"\ncategories: [Tutorial, DataViz, Tables, Tidyverse]\nimage: \"Cthulhuhockeycard.png\"\ncode-fold: true\ncode-tools: true\ndescription: \"Rationalizing my intuition with data.\"\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIndividual.Skater <- read.csv(\"SkaterIndividualstats.csv\")\nOnIce.Skater <- read.csv(\"SkaterOnicestats.csv\")\nGoalie <- read.csv(\"Goalies.csv\")\nIndividual.Skater.Rookie <- read.csv(\"RookieSkaterindividual.csv\")\nOnIce.Skater.Rookie <- read.csv(\"RookieSkaterOnIce.csv\")\nRookie.Goalie <- read.csv(\"RookieGoalies.csv\")\n```\n:::\n\n\n\n## VEZINA BALLOT\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nScale.Goalies <- Goalie %>%\n  filter(GP>25)%>%\n  mutate(scale.SV. = scale(SV.))%>%\n  mutate(scale.GAA = -scale(GAA))%>%\n  mutate(scale.GSAA = scale(GSAA))%>%\n  mutate(scale.GSAx = scale(xG.Against-Goals.Against))%>%\n  mutate(scale.Vezina = scale.SV. + scale.GAA + scale.GSAA + scale.GSAx)%>%\n  \n  mutate(rank.SV. = rank(scale.SV.))%>%\n  mutate(rank.GAA = rank(scale.GAA))%>%\n  mutate(rank.GSAA = rank(scale.GSAA))%>%\n  mutate(rank.GSAx = rank(scale.GSAx))\n\nScale.Vez.plot <- Scale.Goalies %>%\n  filter(GP > 25) %>%\n  \n  # Pivot to long format for stacking\n  pivot_longer(\n    cols = c(scale.GAA, scale.GSAA, scale.SV., scale.GSAx,\n             rank.GAA, rank.GSAA, rank.SV., rank.GSAx),\n    names_to = \"component\",\n    values_to = \"value\"\n  )\n\n\nggplot(Scale.Vez.plot%>%\n         filter(str_detect(component, \"scale\")), aes(x = reorder(Player, scale.Vezina), y = value, fill = component)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"scale.GAA\" = \"#1F77B4\", \n               \"scale.GSAA\" = \"#D62728\",\n               \"scale.SV.\" = \"#FF7F0E\",\n               \"scale.GSAx\" = \"black\")\n  ) +\n  labs(x = \"Player Name\",\n       y = \"Vezina Score Components\",\n       fill = \"Component\",\n       caption = \"Source: https://www.naturalstattrick.com/\",\n       title = \"Vezina Score Components (save.resid - goal.resid)\",\n       subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## HART BALLOT\n\nAwarded to the \"player judged most valuable to his team.\" This isn't necessarily the best overall player, but rather the one who contributes most significantly to his team's success.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nScale.OnIce <- OnIce.Skater %>%\n  filter(GP > 30) %>%\n  select(Player, Position, Team, CF., xGF.) %>%\n  mutate(Position = if_else(Position == \"D\", \"D\", \"F\")) %>%\n  # Extract team after comma, or keep original if no comma exists\n  mutate(Team = case_when(\n    str_detect(Team, \",\") ~ str_trim(str_extract(Team, \",[^,]*$\")), # Extract everything after the last comma\n    TRUE ~ Team\n  )) %>%\n  # Remove the leading comma if it exists\n  mutate(Team = str_replace(Team, \"^,\\\\s*\", \"\")) %>%\n  group_by(Position) %>%\n  mutate(scale.CF. = scale(CF.),\n         scale.xGF. = scale(xGF.)) %>%\n  mutate(scale.Hart = scale.xGF. + scale.CF.)\n\nScale.Individual <- Individual.Skater %>%\n  filter(GP > 30) %>%\n  select(Player, Position, Team, Goals, Total.Assists) %>%\n  mutate(Position = if_else(Position == \"D\", \"D\", \"F\")) %>%\n  # Extract team after comma, or keep original if no comma exists\n  mutate(Team = case_when(\n    str_detect(Team, \",\") ~ str_trim(str_extract(Team, \",[^,]*$\")), # Extract everything after the last comma\n    TRUE ~ Team\n  )) %>%\n  # Remove the leading comma if it exists\n  mutate(Team = str_replace(Team, \"^,\\\\s*\", \"\")) %>%\n  group_by(Position) %>%\n  mutate(scale.Goals = scale(Goals),\n         scale.Assists = scale(Total.Assists)) %>%\n  mutate(scale.Hart.Ind = scale.Goals + scale.Assists)\n\n\nScale.Hart <- Scale.OnIce %>%\n  left_join(Scale.Individual, by = \"Player\") %>%\n  mutate(resid.Goals = resid(lm(scale.Goals ~ Team.x, data = .)),\n         resid.Assists = resid(lm(scale.Assists ~ Team.x, data = .)),\n         resid.CF. = resid(lm(scale.CF. ~ Team.x, data = .)),\n         resid.xGF. = resid(lm(scale.xGF. ~ Team.x, data = .)))\n\n\n\n# Step 1: Data frame preparation\nHart.Long <- Scale.Hart %>%\n  # First calculate Hart score for each player if not already done\n  mutate(Hart = resid.Goals + resid.Assists + resid.CF. + resid.xGF.) %>%\n  pivot_longer(cols = c(scale.CF., scale.xGF., scale.Assists, scale.Goals,\n                        resid.Assists, resid.CF., resid.Goals, resid.xGF.), \n               names_to = \"component\", \n               values_to = \"value\") \n\n\n\n# Split the data into separate components\nlibrary(purrr)\n\n\nhart_filtered <- Hart.Long %>%\n  filter(str_detect(component, \"resid\"), Hart > 6)\n\n# Get unique components\ncomponents <- unique(hart_filtered$component)\n\n# Create a list of plots, one for each component\ncomponent_plots <- map(components, function(comp) {\n  # Filter for just this component\n  comp_data <- hart_filtered %>% filter(component == comp)\n  \n  # Create component-specific plot with its own ordering\n  ggplot(comp_data, \n         aes(x = reorder(Player, value), y = value, fill = Position.x)) +\n    geom_col() +\n    coord_flip() +\n    scale_fill_manual(\n      values = c(\"D\" = \"#1F77B4\", \n                \"F\" = \"#D62728\"),\n      labels = c(\"D\" = \"Defenseman\", \n                \"F\" = \"Forward\")\n    ) +\n    labs(x = NULL, # We'll add a common x-axis label later\n         y = NULL, # We'll add a common y-axis label later\n         fill = \"Position\") +\n    theme_minimal() +\n    theme(\n      panel.grid.major.y = element_blank(),\n      panel.grid.minor = element_blank(),\n      axis.text.y = element_text(size = 8),\n      legend.position = if(comp == components[1]) \"bottom\" else \"none\"\n    ) +\n    ggtitle(comp)\n})\n\n# Combine the plots\nlibrary(gridExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'gridExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n```{.r .cell-code}\ncombined_plot <- do.call(grid.arrange, c(component_plots, ncol = 2))\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Add overall title and caption\ntitle <- grid::textGrob(\"Top 2 Players Per Team - Hart Score Components\", \n                        gp = grid::gpar(fontsize = 14, fontface = \"bold\"))\nsubtitle <- grid::textGrob(\"2024-2025 season stats as of March 4\", \n                          gp = grid::gpar(fontsize = 10))\ncaption <- grid::textGrob(\"Source: https://www.naturalstattrick.com/\", \n                          gp = grid::gpar(fontsize = 8), \n                          hjust = 1)\n\ngrid.arrange(title, subtitle, combined_plot, caption,\n             heights = c(0.5, 0.3, 10, 0.3),\n             ncol = 1)\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2: Create the plot\nggplot(Hart.Long%>%\n         filter(Hart>6, str_detect(component, \"resid\")), \n                   aes(x = reorder(Player, Hart), y = value, fill = component)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"resid.Goals\" = \"#1F77B4\", \n               \"resid.Assists\" = \"#D62728\",\n               \"resid.CF.\" = \"#FF7F0E\",\n               \"resid.xGF.\" = \"black\")\n  ) +\n  \n  labs(x = \"Player Name\",\n       y = \"Hart Score Components\",\n       fill = \"Component\",\n       caption = \"Source: https://www.naturalstattrick.com/\",\n       title = \"Top 1 Players Per Team - Hart Score Components\",\n       subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    # Improve readability of player names\n    axis.text.y = element_text(size = 8)\n  )+\n  facet_wrap(~Position.x)\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## James Norris Memorial Trophy\n\nAwarded to the defenseman who demonstrates \"the greatest all-around ability\" at the position.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNorris.OnIce <- OnIce.Skater%>%\n  filter(Position == \"D\", GP > 30)%>%\n  mutate(scale.CF. = scale(CF.),\n         scale.xGF. = scale(xGF.))%>%\n  select(Player, Team, GP, CF., xGF., scale.CF., scale.xGF. )\nNorris.Indiv <- Individual.Skater%>%\n  filter(Position == \"D\", GP > 30)%>%\n  mutate(scale.Goals = scale(Goals),\n         scale.Assists = scale(Total.Assists))%>%\n  select(Player, Team, GP, Goals, Total.Assists, scale.Goals, scale.Assists )\n\nNorris<- Norris.OnIce%>%\n  left_join(Norris.Indiv, by = \"Player\")%>%\n  mutate(scale.Norris = scale.CF. + scale.xGF. + scale.Goals + scale.Assists)\n\nNorris.Plot <- Norris %>%\n  pivot_longer(cols = c(scale.Goals, scale.Assists, scale.CF., scale.xGF.), \n               names_to = \"component\", \n               values_to = \"value\") %>%\n  filter(str_detect(component, \"scale\"))\n\n# Step 2: Create the plot\nggplot(Norris.Plot%>% filter(scale.Norris > 3), \n                   aes(x = reorder(Player, scale.Norris), y = value, fill = component)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"scale.Goals\" = \"#1F77B4\", \n               \"scale.Assists\" = \"#D62728\",\n               \"scale.CF.\" = \"#FF7F0E\",\n               \"scale.xGF.\" = \"black\")\n  ) +\n  \n  labs(x = \"Player Name\",\n       y = \"Norris Score Components\",\n       fill = \"Component\",\n       caption = \"Source: https://www.naturalstattrick.com/\",\n       title = \"Top Players - Norris Score Components\",\n       subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    # Improve readability of player names\n    axis.text.y = element_text(size = 8)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0.\nℹ Please use one dimensional logical vectors instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Calder Memorial Trophy\n\nGiven to the player \"adjudged to be the most proficient in his first year of competition.\" This is essentially the rookie of the year award.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCalder.OnIce <- OnIce.Skater.Rookie%>%\n  filter(GP > 20)%>%\n  mutate(scale.CF. = scale(CF.),\n         scale.xGF. = scale(xGF.))%>%\n  select(Player, Team, Position, GP, CF., xGF., scale.CF., scale.xGF. )\nCalder.Indiv <- Individual.Skater.Rookie%>%\n  filter(GP > 20)%>%\n  mutate(scale.Goals = scale(Goals),\n         scale.Assists = scale(Total.Assists))%>%\n  select(Player, Team, Position, GP, Goals, Total.Assists, scale.Goals, scale.Assists )\n\nCalder <- Calder.OnIce %>%\n  left_join(Calder.Indiv, by = \"Player\") %>%\n  mutate(scale.Calder = scale.CF. + scale.xGF. + scale.Goals + scale.Assists) %>%\n  mutate(Position.x = if_else(Position.x == \"D\", \"D\", \"F\"))\n\nCalder.Plot <- Calder %>%\n  pivot_longer(cols = c(scale.Goals, scale.Assists, scale.CF., scale.xGF.), \n               names_to = \"component\", \n               values_to = \"value\") %>%\n  filter(str_detect(component, \"scale\"))\n\n# Step 2: Create the plot\nggplot(Calder.Plot%>% filter(scale.Calder > 3), \n                   aes(x = reorder(Player, scale.Calder), y = value, fill = component)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"scale.Goals\" = \"#1F77B4\", \n               \"scale.Assists\" = \"#D62728\",\n               \"scale.CF.\" = \"#FF7F0E\",\n               \"scale.xGF.\" = \"black\")\n  ) +\n  \n  labs(x = \"Player Name\",\n       y = \"Calder Score Components\",\n       fill = \"Component\",\n       caption = \"Source: https://www.naturalstattrick.com/\",\n       title = \"Top Players - Calder Score Components\",\n       subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    # Improve readability of player names\n    axis.text.y = element_text(size = 8)\n  )+\n  facet_wrap(~Position.x)\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Frank J. Selke Trophy\n\nAwarded to the forward who best excels in the defensive aspects of the game.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSelke.OnIce <- OnIce.Skater%>%\n  filter(Position != \"D\", TOI > 1000)%>%\n  mutate(scale.CA = scale(CA/TOI),\n         scale.GA = scale(GA/TOI),\n         scale.SA = scale(SA/TOI),\n         scale.xGA = scale(xGA/TOI))%>%\n  select(Player, Team, Position, TOI, GP, CA, xGA, GA, SA, scale.CA, scale.GA, scale.SA, scale.xGA )%>%\n  mutate(Selke = scale.CA + scale.GA + scale.SA + scale.xGA)\n\n\n\n\nSelke.Plot <- Selke.OnIce %>%\n  pivot_longer(cols = c(scale.CA, scale.GA, scale.SA, scale.xGA), \n               names_to = \"component\", \n               values_to = \"value\") %>%\n  filter(str_detect(component, \"scale\"))\n\n\n\n# Step 2: Create the plot\nggplot(Selke.Plot%>% filter(Selke < -2), \n                   aes(x = reorder(Player, Selke), y = value, fill = component)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"scale.CA\" = \"#1F77B4\", \n               \"scale.GA\" = \"#D62728\",\n               \"scale.SA\" = \"#FF7F0E\",\n               \"scale.xGA\" = \"black\")\n  ) +\n  \n  labs(x = \"Player Name\",\n       y = \"Selke Score Components\",\n       fill = \"Component\",\n       caption = \"Source: https://www.naturalstattrick.com/\",\n       title = \"Top Players - Selke Score Components\",\n       subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    # Improve readability of player names\n    axis.text.y = element_text(size = 8)\n  )\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Lady Byng Memorial Trophy\n\nPresented to the player who exhibits \"the best type of sportsmanship and gentlemanly conduct combined with a high standard of playing ability.\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nByng.OnIce <- OnIce.Skater%>%\n  filter(TOI > 1000)%>%\n  group_by(Position)%>%\n  mutate(scale.CF. = scale(CF.),\n         scale.xGF. = scale(xGF.))%>%\n  select(Player, Team, GP, Position, CF., xGF., scale.CF., scale.xGF. )\nByng.Indiv <- Individual.Skater%>%\n  filter(TOI > 1000)%>%\n  group_by(Position)%>%\n  mutate(scale.Goals = scale(Goals),\n         scale.Assists = scale(Total.Assists),\n         scale.PIM = -scale(PIM))%>%\n  select(Player, Team, GP, Position, PIM, Goals, Total.Assists, scale.Goals, scale.Assists, scale.PIM )\n\nByng<- Byng.OnIce%>%\n  left_join(Byng.Indiv, by = \"Player\")%>%\n  mutate(scale.Byng = (scale.CF. + scale.xGF. + scale.Goals + scale.Assists)/4,\n         Byng = scale.Byng + scale.PIM)\n\n\n\nByng.Plot <- Byng %>%\n  pivot_longer(cols = c(scale.Byng, scale.PIM), \n               names_to = \"component\", \n               values_to = \"value\") %>%\n  filter(str_detect(component, \"scale\"))\n\n\n\n# Step 2: Create the plot\nggplot(Byng%>% filter(Byng > 0.5, scale.PIM > .7)%>%\n         mutate(Position = if_else(Position.x == \"D\", \"D\", \"F\")), \n                   aes(x = reorder(Player,scale.PIM), y = scale.PIM, fill = Position)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"D\" = \"#1F77B4\", \n               \"F\" = \"#D62728\")\n  ) +\n  \n  labs(x = \"Player Name\",\n       y = \"Byng Score Components\",\n       fill = \"Component\",\n       caption = \"Source: https://www.naturalstattrick.com/\",\n       title = \"Top Players - Byng Score Components\",\n       subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    # Improve readability of player names\n    axis.text.y = element_text(size = 8)\n  )+\n  facet_wrap(~Position)\n```\n\n::: {.cell-output-display}\n![](Ballot_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Ballot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}