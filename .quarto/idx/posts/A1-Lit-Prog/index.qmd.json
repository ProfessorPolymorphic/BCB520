{"title":"ASSIGNMENT 1 - Fun with literate programming.","markdown":{"yaml":{"title":"ASSIGNMENT 1 - Fun with literate programming.","author":"Barrie Robison","date":"2024-01-10","categories":["Assignment","DataViz","Quarto"],"image":"Cthulhuhacking1.png","description":"Source code hybridized with documentation adds to your data science spellbook."},"headingText":"SUMMARY","containsRefs":false,"markdown":"\n\n\nThe idea of Literate Programming is that source code that is executed as part of the program's purpose is interspersed with documentation that describes the program's logic. The concept of literate programming was first articulated by David Knuth in 1984. You know... back when music was good? Modern Data Science leans pretty heavily on literate programming, and to be honest, there aren't very many good arguments as to why you WOULDN'T want to implement this approach in your own work. Bearing this in mind, we will adopt this framework for most of the activities, exercises, and assignments in this course. All of us will benefit by practicing these skills.\n\n## LITERATE PROGRAMMING PUBLISHING SYSTEMS\n\nI'm trying to keep this course as technology agnostic as I can. The idea is that you should be practicing and building competencies in the languages and algorithms that are most useful to you. Who am I to tell you to use R instead of Python? If you have skills in a particular language I encourage you to keep using that during this course. That being said, I am going to work the examples using R and R Studio, and I will (mostly) use Quarto as the literate programming framework.\n\nIf all of this is new to you, no problem. Just follow along in R and Quarto and start your skill building journey with those languages.\n\nIf you are a Python person, great! Quarto can accommodate that language as well. If you have another preference for literate programming, such as sticking with R Markdown until the Quarto bugs are fixed, that is great. Find the framework and tools that work for you, and practice, practice, practice!\n\n### [Quarto](https://quarto.org)\n\nAn open source publishing system that allows you to create websites, documents, blogs, books, publications, presentations, and more while using R, Python, Julia, or Observable. Quarto is intended to be the more functional successor of R Markdown. I intend to use Quarto for most of my work in this course.\n\n### [R Markdown](https://rmarkdown.rstudio.com)\n\nAnother publishing system for creating all the things ... websites, slides, manuscripts, dashboards, etc. While most people (including me!) instinctively think of R and Python within R Markdown, the list of supported language engines is pretty extensive.\n\n```{r}\nnames(knitr::knit_engines$get())\n```\n\n## LANGUAGES AND TOOLSETS\n\nThere are quite a few, but the five that seemed to keep coming up as I prepped this course are:\n\n### [R](https://www.r-project.org)\n\nA very powerful open source framework for statistical computing and graphics. R has a lot of base functionality, and its capabilities are increased by 100 fold with packages created by R users. Packages are the core units of R code. I'm going to use R for the vast majority of demonstrations in this course.\n\n### [Python](https://www.python.org)\n\nPython is an open source general purpose programming language. It wasn't developed just for statistical computing or data science, and people use this language for tons of different applications. There is no denying it has become a very powerful language for data science and data visualization.\n\n### [Tableau](https://www.tableau.com)\n\nTableau is proprietary software that is very powerful for creating beautiful and functional data visualizations. It can integrate with all sorts of data sources and is used a lot for analytics, especially in the business world. The downsides (that occur to me at least) are that it costs money, it is not open source, and is more of a one-trick-pony than the programming languages on this list.\n\n### [Javascript](https://www.javascript.com)\n\nJavascript has been around for about 25 years, and is (I think) the world's most popular programming language. Along with HTML and CSS, Javascript drives pretty much the entire internet. I mention Javascript here because it has the [D3](https://d3js.org) library, which can create super cool interactive data visualizaitons. In my experience, the learning curve with Javascript and D3 was pretty steep. I bought a [book](https://www.amazon.com/Interactive-Data-Visualization-Web-Introduction/dp/1491921285) about it once, but just haven't been able to allocate the amount of time necessary to really start using it. Check out the [gallery](https://observablehq.com/@d3/gallery) of examples. Amazing!\n\n### [Observable / D3](https://observablehq.com/)\n\nObservable is a set of extensions to Javascript that features something called reactive runtime. This means that the code blocks are executed and compiled as they are written, and changes are implemented instantaneously. Observable is pretty great for data exploration, and is well [supported by Quarto](https://quarto.org/docs/computations/ojs.html). In addition, you can use the Observable JS libraries in Quarto to access [D3](https://d3js.org). We'll use some of these tools in this course, especially when we start considering interactivity.\n\n## ASSIGNMENT\n\nAfter that long introduction, I suppose you are wondering what I want you to actually DO today.\n\n**Well, I want you to set up your publishing system and preferred language on your computer. Then I want you to recreate the classic figure from Anscombe's Quartet.**\n\nNow, you might be asking...\n\n\"How am I supposed to do that? You haven't taught me how to do anything yet!\"\n\nHere is the dirty little secret of modern education.\n\n**The Internet Exists.**\n\nWhile I could use up an entire 90 minute lecture telling you how to:\n\n-   Download and install R, [R-Studio](https://posit.co/downloads/){target=\"_blank\"}, and Quarto (included by default with R-Studio).\n\n-   [Create a Quarto document that will publish in the .html format](https://quarto.org/docs/output-formats/html-basics.html){target=\"_blank\"}\n\n-   [Install the R packages you will need](https://www.dataquest.io/blog/install-package-r/){target=\"_blank\"}\n\n-   [Tidy up the Anscombe's Quartet data](https://www.njtierney.com/post/2020/06/01/tidy-anscombe/){target=\"_blank\"}\n\n-   Calculate the summary statistics for each x y pair\n\n-   Make a nice little plot...\n\nI'm not going to do that.\n\nInstead, I want you to use the resources I point towards, or other resources that make more sense to you, to figure out how to do those things.\n\n## RESOURCES\n\n[Tidyverse and Anscombe's Quartet](https://www.njtierney.com/post/2020/06/01/tidy-anscombe/)\n\n[Handy cheat-sheets for many different R packages](https://posit.co/resources/cheatsheets/)\n\n[Tutorial 1 - Literate Programming](../T1-Lit-Prog/index.qmd)\n\n[Tutorial 2 - Literate Programming and Anscombe's Quartet](../T2-Anscombe/index.qmd)\n\n[Tutorial 3 - Python](../T3-Python/index.qmd)\n","srcMarkdownNoYaml":"\n\n## SUMMARY\n\nThe idea of Literate Programming is that source code that is executed as part of the program's purpose is interspersed with documentation that describes the program's logic. The concept of literate programming was first articulated by David Knuth in 1984. You know... back when music was good? Modern Data Science leans pretty heavily on literate programming, and to be honest, there aren't very many good arguments as to why you WOULDN'T want to implement this approach in your own work. Bearing this in mind, we will adopt this framework for most of the activities, exercises, and assignments in this course. All of us will benefit by practicing these skills.\n\n## LITERATE PROGRAMMING PUBLISHING SYSTEMS\n\nI'm trying to keep this course as technology agnostic as I can. The idea is that you should be practicing and building competencies in the languages and algorithms that are most useful to you. Who am I to tell you to use R instead of Python? If you have skills in a particular language I encourage you to keep using that during this course. That being said, I am going to work the examples using R and R Studio, and I will (mostly) use Quarto as the literate programming framework.\n\nIf all of this is new to you, no problem. Just follow along in R and Quarto and start your skill building journey with those languages.\n\nIf you are a Python person, great! Quarto can accommodate that language as well. If you have another preference for literate programming, such as sticking with R Markdown until the Quarto bugs are fixed, that is great. Find the framework and tools that work for you, and practice, practice, practice!\n\n### [Quarto](https://quarto.org)\n\nAn open source publishing system that allows you to create websites, documents, blogs, books, publications, presentations, and more while using R, Python, Julia, or Observable. Quarto is intended to be the more functional successor of R Markdown. I intend to use Quarto for most of my work in this course.\n\n### [R Markdown](https://rmarkdown.rstudio.com)\n\nAnother publishing system for creating all the things ... websites, slides, manuscripts, dashboards, etc. While most people (including me!) instinctively think of R and Python within R Markdown, the list of supported language engines is pretty extensive.\n\n```{r}\nnames(knitr::knit_engines$get())\n```\n\n## LANGUAGES AND TOOLSETS\n\nThere are quite a few, but the five that seemed to keep coming up as I prepped this course are:\n\n### [R](https://www.r-project.org)\n\nA very powerful open source framework for statistical computing and graphics. R has a lot of base functionality, and its capabilities are increased by 100 fold with packages created by R users. Packages are the core units of R code. I'm going to use R for the vast majority of demonstrations in this course.\n\n### [Python](https://www.python.org)\n\nPython is an open source general purpose programming language. It wasn't developed just for statistical computing or data science, and people use this language for tons of different applications. There is no denying it has become a very powerful language for data science and data visualization.\n\n### [Tableau](https://www.tableau.com)\n\nTableau is proprietary software that is very powerful for creating beautiful and functional data visualizations. It can integrate with all sorts of data sources and is used a lot for analytics, especially in the business world. The downsides (that occur to me at least) are that it costs money, it is not open source, and is more of a one-trick-pony than the programming languages on this list.\n\n### [Javascript](https://www.javascript.com)\n\nJavascript has been around for about 25 years, and is (I think) the world's most popular programming language. Along with HTML and CSS, Javascript drives pretty much the entire internet. I mention Javascript here because it has the [D3](https://d3js.org) library, which can create super cool interactive data visualizaitons. In my experience, the learning curve with Javascript and D3 was pretty steep. I bought a [book](https://www.amazon.com/Interactive-Data-Visualization-Web-Introduction/dp/1491921285) about it once, but just haven't been able to allocate the amount of time necessary to really start using it. Check out the [gallery](https://observablehq.com/@d3/gallery) of examples. Amazing!\n\n### [Observable / D3](https://observablehq.com/)\n\nObservable is a set of extensions to Javascript that features something called reactive runtime. This means that the code blocks are executed and compiled as they are written, and changes are implemented instantaneously. Observable is pretty great for data exploration, and is well [supported by Quarto](https://quarto.org/docs/computations/ojs.html). In addition, you can use the Observable JS libraries in Quarto to access [D3](https://d3js.org). We'll use some of these tools in this course, especially when we start considering interactivity.\n\n## ASSIGNMENT\n\nAfter that long introduction, I suppose you are wondering what I want you to actually DO today.\n\n**Well, I want you to set up your publishing system and preferred language on your computer. Then I want you to recreate the classic figure from Anscombe's Quartet.**\n\nNow, you might be asking...\n\n\"How am I supposed to do that? You haven't taught me how to do anything yet!\"\n\nHere is the dirty little secret of modern education.\n\n**The Internet Exists.**\n\nWhile I could use up an entire 90 minute lecture telling you how to:\n\n-   Download and install R, [R-Studio](https://posit.co/downloads/){target=\"_blank\"}, and Quarto (included by default with R-Studio).\n\n-   [Create a Quarto document that will publish in the .html format](https://quarto.org/docs/output-formats/html-basics.html){target=\"_blank\"}\n\n-   [Install the R packages you will need](https://www.dataquest.io/blog/install-package-r/){target=\"_blank\"}\n\n-   [Tidy up the Anscombe's Quartet data](https://www.njtierney.com/post/2020/06/01/tidy-anscombe/){target=\"_blank\"}\n\n-   Calculate the summary statistics for each x y pair\n\n-   Make a nice little plot...\n\nI'm not going to do that.\n\nInstead, I want you to use the resources I point towards, or other resources that make more sense to you, to figure out how to do those things.\n\n## RESOURCES\n\n[Tidyverse and Anscombe's Quartet](https://www.njtierney.com/post/2020/06/01/tidy-anscombe/)\n\n[Handy cheat-sheets for many different R packages](https://posit.co/resources/cheatsheets/)\n\n[Tutorial 1 - Literate Programming](../T1-Lit-Prog/index.qmd)\n\n[Tutorial 2 - Literate Programming and Anscombe's Quartet](../T2-Anscombe/index.qmd)\n\n[Tutorial 3 - Python](../T3-Python/index.qmd)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"spacelab","title-block-banner":true,"title":"ASSIGNMENT 1 - Fun with literate programming.","author":"Barrie Robison","date":"2024-01-10","categories":["Assignment","DataViz","Quarto"],"image":"Cthulhuhacking1.png","description":"Source code hybridized with documentation adds to your data science spellbook."},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}