{"title":"TUTORIAL 6 - APIs and JSON data","markdown":{"yaml":{"title":"TUTORIAL 6 - APIs and JSON data","image":"Cthulhuhockeymask.png","execute":{"eval":false},"draft":true},"containsRefs":false,"markdown":"\n\n```{r}\n\n\n\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(repurrrsive)\nlibrary(tibblify)\nlibrary(purrr)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rjson)\nlibrary(jsonlite)\nlibrary(ggplot2)\n\n\nBio<-fromJSON(\"draft.json\")\n\nnoway<-as.data.frame(Bio)\n\nplayers<- noway %>%\n  select(data.draftYear, data.playerId, data.playerName, data.draftYear,\n         data.roundNumber, data.overallPickNumber, data.pickInRound,\n         data.height, data.weight, data.position)\n\ncleanplayers <- drop_na(players)\ncleanplayers$playerId<-cleanplayers$data.playerId\n\ncleanplayers2 <- cleanplayers %>%\n  distinct(playerId, .keep_all= TRUE)\n\nskaters<-cleanplayers2%>%\n  filter(data.position!=\"G\")\n```\n\n```{r}\n#| eval: false\n\n\napi_url <- \"https://statsapi.web.nhl.com\"\n\n\nrecentdrafts<-skaters%>%\n  filter(data.draftYear>1999)\nrecentdrafts$playerId<-recentdrafts$data.playerId\nplayerIds <- as.list(recentdrafts$data.playerId)\n\ntestloop<-data.frame()\ni<-0\nfor (player_id in playerIds){\n  \n  \n\nendpoint <- paste0(\"/api/v1/people/\", player_id, \"/stats?stats=yearByYear\")\n\n\nurl_json <- paste0(api_url,endpoint)\n\nraw_json <- url_json %>% \n  httr::GET() %>% \n  httr::content()\n\nargh <- tibblify(raw_json$stats[[1]]$splits)\n\nplayerstats<- unnest_wider(argh, col=c(stat,league))\nplayerstats$playerId<-player_id\nplayerstatsfinal<-playerstats %>%\n  filter(name==\"National Hockey League\") %>%\n  select(season, games, points, goals, assists,  \n         name, playerId) \n  \ntestloop<-rbind(testloop,playerstatsfinal)\ni<-i+1\nprint(i)\n}\n\n\n\nd2000on<-full_join(testloop,recentdrafts, by=\"playerId\")\n\n```\n\n```{r}\n\n\ndataIwant <- d2000on\nwrite.csv(dataIwant, file=\"NHLskaterstats.csv\")\n\n```\n\n```{r}\n#| eval: false\nlibrary(dplyr)\n\ndataIwant2<- dataIwant %>%\n  mutate(seasonshort = as.numeric(str_sub(season, start=1, end=4)))\n\ndataIwant2$postdraft<- dataIwant2$seasonshort-dataIwant2$data.draftYear\n\ndataIwant2$postdraft <- paste(\"dY\", dataIwant2$postdraft)\n\ndataIwant3<-dataIwant2 %>%\n  group_by(playerId, data.draftYear, data.playerName, data.roundNumber,\n           data.pickInRound, data.overallPickNumber, data.position, data.height,\n           data.weight, postdraft) %>%\n  summarise(totgames=sum(games), totgoals=sum(goals), totassist=sum(assists), totpoint=sum(points))\n\ndatawide<-dataIwant3 %>%\n  pivot_wider(names_from = postdraft, values_from = c(totgames, totgoals, totassist, totpoint),\n              values_fill = 0)\n\nallplayerswide<-full_join(cleanplayers,datawide, by=\"playerId\")\n\nallplayerswide <- allplayerswide %>% \n    mutate_at(19:106, ~replace_na(.,0))\n\nlookup <- c(name = \"data.playerName.x\", \n            draftyear = \"data.draftYear.x\",\n            round = \"data.roundNumber.x\",\n            overall = \"data.overallPickNumber.x\",\n            pickinRound = \"data.pickInRound.x\",\n            height = \"data.height.x\",\n            weight = \"data.weight.x\",\n            position = \"data.position.x\")\n\ntestthing<-rename(allplayerswide, all_of(lookup))\n\nkeepthis<-testthing[c(1, 3:10, 19:106)]\n\ngames<-keepthis%>%\n  select(c(1:9, starts_with(\"totgames\")))\n\ngameslong <- games %>%\n  pivot_longer(\n    cols = starts_with(\"totgames\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totgames_dY \",\n    values_to = \"NHLgames\")\n\ngameslong <- gameslong%>%\n  filter(postdraft!=\"NA\")\n\ngameslong$postdraft<-as.numeric(gameslong$postdraft)\n\n\npoints<-keepthis%>%\n  select(c(1:9, starts_with(\"totpoint\")))\n\npointslong <- points %>%\n  pivot_longer(\n    cols = starts_with(\"totpoint\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totpoint_dY \",\n    values_to = \"points\")\n\npointslong <- pointslong%>%\n  filter(postdraft!=\"NA\")\n\npointslong$postdraft<-as.numeric(pointslong$postdraft)\n\nassists<-keepthis%>%\n  select(c(1:9, starts_with(\"totassist\")))\n\nassistslong <- assists %>%\n  pivot_longer(\n    cols = starts_with(\"totassist\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totassist_dY \",\n    values_to = \"assists\")\n\nassistslong <- assistslong%>%\n  filter(postdraft!=\"NA\")\n\nassistslong$postdraft<-as.numeric(assistslong$postdraft)\n\ngoals<-keepthis%>%\n  select(c(1:9, starts_with(\"totgoal\")))\n\ngoalslong <- goals %>%\n  pivot_longer(\n    cols = starts_with(\"totgoal\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totgoals_dY \",\n    values_to = \"goals\")\n\ngoalslong <- goalslong%>%\n  filter(postdraft!=\"NA\")\n\ngoalslong$postdraft<-as.numeric(goalslong$postdraft)\n\n\n\ngamegoal<- left_join(gameslong,goalslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\ngga<-left_join(gamegoal,assistslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\nggap<-left_join(gga,pointslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\n\n\n\n\nstatslong <- ggap %>%\n  mutate(position = replace(position, position == \"G\", \"Goaltender\"),\n         position = replace(position, position == \"D\", \"Defense\"),\n         position = replace(position, position == \"C\" | position ==\"LW\", \"Forward\"),\n         position = replace(position, position == \"RW\" | position == \"F\", \"Forward\"),\n         position = replace(position, position == \"C/LW\" | position == \"C/RW\", \"Forward\"),\n         position = replace(position, position == \"LW/RW\", \"Forward\"))\n  \n\nactualdata<- statslong %>%\n  filter(round<8, draftyear>2000)\n\nactualdata2<-actualdata%>%\n  distinct(playerId,postdraft, .keep_all = TRUE)\n\n\n\n\n \nwrite.csv(actualdata2, file = \"NHLdraftstats.csv\")\n\n\n\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n\n\n\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(repurrrsive)\nlibrary(tibblify)\nlibrary(purrr)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rjson)\nlibrary(jsonlite)\nlibrary(ggplot2)\n\n\nBio<-fromJSON(\"draft.json\")\n\nnoway<-as.data.frame(Bio)\n\nplayers<- noway %>%\n  select(data.draftYear, data.playerId, data.playerName, data.draftYear,\n         data.roundNumber, data.overallPickNumber, data.pickInRound,\n         data.height, data.weight, data.position)\n\ncleanplayers <- drop_na(players)\ncleanplayers$playerId<-cleanplayers$data.playerId\n\ncleanplayers2 <- cleanplayers %>%\n  distinct(playerId, .keep_all= TRUE)\n\nskaters<-cleanplayers2%>%\n  filter(data.position!=\"G\")\n```\n\n```{r}\n#| eval: false\n\n\napi_url <- \"https://statsapi.web.nhl.com\"\n\n\nrecentdrafts<-skaters%>%\n  filter(data.draftYear>1999)\nrecentdrafts$playerId<-recentdrafts$data.playerId\nplayerIds <- as.list(recentdrafts$data.playerId)\n\ntestloop<-data.frame()\ni<-0\nfor (player_id in playerIds){\n  \n  \n\nendpoint <- paste0(\"/api/v1/people/\", player_id, \"/stats?stats=yearByYear\")\n\n\nurl_json <- paste0(api_url,endpoint)\n\nraw_json <- url_json %>% \n  httr::GET() %>% \n  httr::content()\n\nargh <- tibblify(raw_json$stats[[1]]$splits)\n\nplayerstats<- unnest_wider(argh, col=c(stat,league))\nplayerstats$playerId<-player_id\nplayerstatsfinal<-playerstats %>%\n  filter(name==\"National Hockey League\") %>%\n  select(season, games, points, goals, assists,  \n         name, playerId) \n  \ntestloop<-rbind(testloop,playerstatsfinal)\ni<-i+1\nprint(i)\n}\n\n\n\nd2000on<-full_join(testloop,recentdrafts, by=\"playerId\")\n\n```\n\n```{r}\n\n\ndataIwant <- d2000on\nwrite.csv(dataIwant, file=\"NHLskaterstats.csv\")\n\n```\n\n```{r}\n#| eval: false\nlibrary(dplyr)\n\ndataIwant2<- dataIwant %>%\n  mutate(seasonshort = as.numeric(str_sub(season, start=1, end=4)))\n\ndataIwant2$postdraft<- dataIwant2$seasonshort-dataIwant2$data.draftYear\n\ndataIwant2$postdraft <- paste(\"dY\", dataIwant2$postdraft)\n\ndataIwant3<-dataIwant2 %>%\n  group_by(playerId, data.draftYear, data.playerName, data.roundNumber,\n           data.pickInRound, data.overallPickNumber, data.position, data.height,\n           data.weight, postdraft) %>%\n  summarise(totgames=sum(games), totgoals=sum(goals), totassist=sum(assists), totpoint=sum(points))\n\ndatawide<-dataIwant3 %>%\n  pivot_wider(names_from = postdraft, values_from = c(totgames, totgoals, totassist, totpoint),\n              values_fill = 0)\n\nallplayerswide<-full_join(cleanplayers,datawide, by=\"playerId\")\n\nallplayerswide <- allplayerswide %>% \n    mutate_at(19:106, ~replace_na(.,0))\n\nlookup <- c(name = \"data.playerName.x\", \n            draftyear = \"data.draftYear.x\",\n            round = \"data.roundNumber.x\",\n            overall = \"data.overallPickNumber.x\",\n            pickinRound = \"data.pickInRound.x\",\n            height = \"data.height.x\",\n            weight = \"data.weight.x\",\n            position = \"data.position.x\")\n\ntestthing<-rename(allplayerswide, all_of(lookup))\n\nkeepthis<-testthing[c(1, 3:10, 19:106)]\n\ngames<-keepthis%>%\n  select(c(1:9, starts_with(\"totgames\")))\n\ngameslong <- games %>%\n  pivot_longer(\n    cols = starts_with(\"totgames\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totgames_dY \",\n    values_to = \"NHLgames\")\n\ngameslong <- gameslong%>%\n  filter(postdraft!=\"NA\")\n\ngameslong$postdraft<-as.numeric(gameslong$postdraft)\n\n\npoints<-keepthis%>%\n  select(c(1:9, starts_with(\"totpoint\")))\n\npointslong <- points %>%\n  pivot_longer(\n    cols = starts_with(\"totpoint\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totpoint_dY \",\n    values_to = \"points\")\n\npointslong <- pointslong%>%\n  filter(postdraft!=\"NA\")\n\npointslong$postdraft<-as.numeric(pointslong$postdraft)\n\nassists<-keepthis%>%\n  select(c(1:9, starts_with(\"totassist\")))\n\nassistslong <- assists %>%\n  pivot_longer(\n    cols = starts_with(\"totassist\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totassist_dY \",\n    values_to = \"assists\")\n\nassistslong <- assistslong%>%\n  filter(postdraft!=\"NA\")\n\nassistslong$postdraft<-as.numeric(assistslong$postdraft)\n\ngoals<-keepthis%>%\n  select(c(1:9, starts_with(\"totgoal\")))\n\ngoalslong <- goals %>%\n  pivot_longer(\n    cols = starts_with(\"totgoal\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totgoals_dY \",\n    values_to = \"goals\")\n\ngoalslong <- goalslong%>%\n  filter(postdraft!=\"NA\")\n\ngoalslong$postdraft<-as.numeric(goalslong$postdraft)\n\n\n\ngamegoal<- left_join(gameslong,goalslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\ngga<-left_join(gamegoal,assistslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\nggap<-left_join(gga,pointslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\n\n\n\n\nstatslong <- ggap %>%\n  mutate(position = replace(position, position == \"G\", \"Goaltender\"),\n         position = replace(position, position == \"D\", \"Defense\"),\n         position = replace(position, position == \"C\" | position ==\"LW\", \"Forward\"),\n         position = replace(position, position == \"RW\" | position == \"F\", \"Forward\"),\n         position = replace(position, position == \"C/LW\" | position == \"C/RW\", \"Forward\"),\n         position = replace(position, position == \"LW/RW\", \"Forward\"))\n  \n\nactualdata<- statslong %>%\n  filter(round<8, draftyear>2000)\n\nactualdata2<-actualdata%>%\n  distinct(playerId,postdraft, .keep_all = TRUE)\n\n\n\n\n \nwrite.csv(actualdata2, file = \"NHLdraftstats.csv\")\n\n\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"spacelab","title-block-banner":true,"title":"TUTORIAL 6 - APIs and JSON data","image":"Cthulhuhockeymask.png","draft":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}