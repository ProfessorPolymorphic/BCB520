{"title":"ASSIGNMENT 5","markdown":{"yaml":{"title":"ASSIGNMENT 5","subtitle":"Visualizations for Tabular Data","author":"Barrie Robison","date":"2023-03-06","categories":["Assignment","DataViz","Tables","Scatterplot","Barplot","Piechart"],"image":"Cthulhuhockeycard.png","code-fold":true,"code-tools":true,"description":"Should I trade these draft picks for this bag of magic beans...?","draft":true},"headingText":"OVERVIEW","containsRefs":false,"markdown":"\n\n\nIn this assignment, we are going to practice creating visualizations for tabular data. Unlike previous assignments, however, this time we will all be using the same data sets. I'm doing this because I want everyone to engage in the same logic process and have the same design objectives in mind.\n\n## SCENARIO\n\nImagine you are a high priced data science consultant. One of your good friends, Cassandra Canuck, is an Assistant General Manager for the Vancouver Canucks, a team in the National Hockey League with a long, long.... long history of futility.\n\nCassandra tells you her boss, General Manager Hans Doofenschmirtz, is considering trading this year's first round draft pick for two second round picks and one third round pick from another team. For the purposes of this exercise, let's set the 2023 NHL draft order using the [Tankathon Simulator](https://www.tankathon.com/nhl). The NHL uses a lottery system in which the teams lowest in the standings have the highest odds of getting the first overall pick. I'll simulate the lottery now...\n\nHOLY CRAP! The Vancouver Canucks jump up 6 spots, and will pick FIRST overall. Here is a screenshot:\n\n![](NHLlottery.png)\n\nOur official scenario is this:\n\n**Vancouver receives:** The 7th pick in the second round (39th overall), the 10th pick in the second round (42nd overall), and the 10th pick in the third round (74th overall).\n\n**Detroit receives:** The 1st pick in the first round (1st overall).\n\nDoofenschmirtz reasons that more draft picks are better, and is inclined to make the trade. Cassandra isn't so sure...\n\nShe asks you to create some data visualizations she can show to her boss that might help him make the best decision.\n\n## DIRECTIONS\n\nCreate a new post in your portfolio for this assignment. Call it something cool, like NHL draft analysis, or Hockey Analytics, or John Wick....\n\nCopy the data files from the repository, and maybe also the .qmd file.\n\nUse the .qmd file as the backbone of your assignment, changing the code and the markdown text as you go.\n\n## THE DATA\n\nHow can we evaluate whether trading a first round pick for two second round picks and a third round pick is a good idea? One approach is to look at the historical performance of players from these draft rounds.\n\nI've created a data set that will allow us to explore player performance as a function of draft position. If you are curious as to how I obtained and re-arranged these data, you can check out that tutorial [here](../T6-APIsandJSON/index.qmd). For this assignment, though, I want to focus on the visualizations.\n\n```{r}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\n\nNHLDraft<-read.csv(\"NHLDraft.csv\")\nNHLDictionary<-read_excel(\"NHLDictionary.xlsx\")\n\nknitr::kable(NHLDictionary)\n```\n\nIn this case, we have a dataframe with all the drafted players since 2000, their position, their draft year and position, and then rows for each season since being drafted (`postdraft`). The key variable here is `NHLgames`, which tells us how many games they played in the NHL each season since being drafted.\n\n## SIMPLE SCATTERPLOT\n\nOne thing to realize about professional hockey is that it is pretty rare for a player to play in the NHL right after being drafted. Players get drafted when they are 18 years old, and they usually play in the juniors, minor leagues, or the NCAA for a bit to further develop. Let's use a scatterplot to visualize this phenomenon with the most recent draft classes.\n\n```{r}\ndraft2022<-NHLDraft%>%\n  filter(draftyear==2022 & postdraft==0)\n\nggplot(draft2022, aes(x=round, y=NHLgames))+\n  geom_point()\n\n```\n\nAs you can see, the players drafted in June of 2022 haven't played much this season. There are few things wrong with this visualization, however:\n\n1.  **Overplotting.** All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help?\n2.  **Labelling.** Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3.  **Key-Value pairs:** Looks like we are using \"round\" as a continuous variable. Can we change this to an ordered factor?\n\n## EXPANDED SCATTERPLOT\n\nThe data from the most recent draft isn't really helpful for our question. Let's go back in time and use a draft year that has had some time to develop and reach their potential. How about 2018?\n\n```{r}\ndraft2018<-NHLDraft%>%\n  filter(draftyear==2018 & postdraft<6)\n\nggplot(draft2018, aes(x=round, y=NHLgames))+\n  geom_point()\n\n```\n\nHmmm... in addition to the problem of overplotting, we've got an additional issue here. We actually have two keys and one attribute. The attribute is `NHLgames`, and the keys are `round` and `postdraft`, but we are only using round.\n\nPostdraft indicates the number of seasons after being drafted. We have several choices here. We can make a visualization that uses both keys, or we can somehow summarize the data for one of the keys.\n\nFor example, let's say we just wanted to know the TOTAL number of NHL games played since being drafted.\n\n```{r}\ndrafttot2018<- draft2018%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()\n\ndrafttot<- NHLDraft%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n\nggplot(NHLDraft, aes(x=postdraft, y=NHLgames))+\n  geom_smooth(aes(color=as.factor(round)))\n\nggplot(NHLDraft%>%filter(postdraft<6), aes(x=NHLgames))+\n  geom_histogram()+\n  facet_grid(postdraft~round)\n\n\n```\n\nFine, I guess, but we still have to deal with overplotting, and think about whether a scatterplot really helps us accomplish our task. For this figure do the following:\n\n1.  **Overplotting.** All those points on the y=0 line represent about 32 players each. Can you you think of a way that adding extra channels might help?\n2.  **Labelling.** Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3.  **Key-Value pairs:** Looks like we are using \"round\" as a continuous variable. Can we change this to an ordered factor?\n\n## SCATTERPLOT WITH OVERALL DRAFT POSITION\n\nThis approach might yield a better match with the scatterplot idiom. What if we ignore draft round, and use the player's overall draft position instead?\n\n```{r}\n\nggplot(drafttot2018, aes(x=overall, y=totgames))+\n  geom_point()\n\n```\n\nFor this figure, address the following:\n\n1.  We are trying to address the notion of trading a pick from round 1 for picks from round 2 and 3. Add visual channels to this plot that will help us make that decision.\n2.  Create a caption and better axis labels for this figure.\n3.  What if we wanted to use more than just the 2018 draft class?\n\n## SCATTERPLOT SUMMARY\n\nWe seem to be running into an issue in terms of overplotting. Scatterplots are great, but they work best for two quantitative attributes, and we have a situation with one or two keys and one quantitative attribute. The thing is, scatterplots can be very useful when part of our workflow involves modeling the data in some way. We'll cover this kind of thing in future assignments, but just a bit of foreshadowing here:\n\n```{r}\n\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()+\n  geom_smooth()\n\n```\n\nAdding the smoothed line doesn't eliminate the overplotting problem, but it does indicate that it exists. We'll cover other potential solutions (including Cody's violin plots!) to this issue later in the course, when we get to the notions of faceting and data reduction.\n\n## SIMPLE BAR CHART\n\nOne of the best ways to deal with overplotting is to use our keys to SEPARATE and ORDER our data. Let's do that now. I'll stick with the summarized data for the 2018 draft year for now.\n\n```{r}\nggplot(drafttot2018, aes(x = name, y=totgames))+\n  geom_col()\n\n```\n\nEpic. We now have a bar (column, really) chart with the key being player `name`, and the attribute being the total number of games played. We've SEPARATED the data using the spatial x-axis position channel, and aligned to that axis as well. But this visualization clearly sucks. You need to make it better by:\n\n1.  Adding a visual channel indicating draft round.\n2.  Fixing the order of the x axis.\n3.  Making a caption and better axis labels.\n4.  Fixing the values of the x axis labels so they aren't such a mess.\n\n## STACKED BAR?\n\nStacked bar charts use two keys and one value. Can we leverage this idiom? Perhaps if we used both `round` and `postdraft` as our keys and NHLgames as our value...\n\nThe idea here is that we might be able to get a sense of the temporal pattern of NHL games after a player is drafted. Do first round picks join the NHL earlier? Do they stay in the NHL longer? That kind of thing.\n\n```{r}\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(-round)))+\n  geom_col(position = \"stack\")\n\nNHLDraft <-NHLDraft %>%\n  mutate(descround = desc(as.factor(round)))\n\nrounds<-c(\"darkred\",\"red\",\"pink\", \"violet\", \"lightblue\",\"blue\", \"darkblue\")\n\nggplot(NHLDraft, aes(x = postdraft, y=NHLgames, fill=as.factor(-round), \n                     alpha = as.factor(-round)))+\n  geom_col(position = \"stack\")+\n  theme(legend.position = \"none\")\n\n```\n\nThis seems like it has some potential, but it definitely needs some work (by you):\n\n1.  You know the drill by now. Caption! Labels!\n2.  Improve the color palette.\n3.  Do we really only want data from the 2018 draft class?\n4.  Consider the order of rounds within the stack (glyph). Which round is most important? Change the order within the glyphs to reflect this.\n\n## PIE CHARTS / NORMALIZED BAR CHARTS\n\nWe all know that Pie Charts are rarely a good choice, but let's look at how to make one here. I'll eliminate all the players drafted in 2018 who never played an NHL game, leaving us 80 players drafted in that year who made \"THE SHOW\". Let's look at how those 80 players were drafted:\n\n```{r}\n\nplayedNHL2018 <- drafttot2018%>%\n  filter(totgames>0)\n\nggplot(playedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")\n\n\n```\n\nObviously this isn't great, but can you state why? Write a little critique of this visualizaiton that:\n\n1.  Considers a player who played hundreds of games over their first five years vs a player who played one game in five years.\n2.  Evaluates the relative value of a second round pick and a third round pick.\n\nNow let's change this to account for the various years post draft:\n\n```{r}\nseasonplayedNHL2018 <- draft2018%>%\n  filter(NHLgames>0)\n\n\nggplot(seasonplayedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")+\n  facet_wrap(~postdraft)\n\n```\n\nSeems like there is something to work with here, but let's compare this to a normalized bar chart:\n\n```{r}\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(round)))+\n  geom_col(position = \"fill\")\n\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=overall))+\n  geom_col(position = \"fill\")\n\n```\n\nCan you work with this to make it a useful visualization for your friend, Cassandra Canuck?\n\n## HEATMAP?\n\nCould this be useful?\n\n```{r}\n\nround1<-NHLDraft%>%\n  filter(round==1)\n\nggplot(NHLDraft, aes(y = reorder(name, overall), x = postdraft, fill = NHLgames)) +\n  geom_tile(width = .5, height = 5) +\n  theme(plot.margin = unit(c(0,0,0,0), \"cm\"),\n        axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank())+\n  scale_fill_gradient(low = \"blue\", high = \"red\")\n\nggplot(NHLDraft, aes(y = overall, x = postdraft, z=NHLgames)) + \n  geom_tile(aes(fill=NHLgames)) \n```\n\n## OTHER STUFF TO CONSIDER\n\n1.  Do these visualizations change as a function of player position?\n2.  Is the number of NHL games played really the best metric to use?\n\n## CONCLUSION\n\nBased on your visualizations, what would you advise regarding this trade proposal? Why?\n","srcMarkdownNoYaml":"\n\n## OVERVIEW\n\nIn this assignment, we are going to practice creating visualizations for tabular data. Unlike previous assignments, however, this time we will all be using the same data sets. I'm doing this because I want everyone to engage in the same logic process and have the same design objectives in mind.\n\n## SCENARIO\n\nImagine you are a high priced data science consultant. One of your good friends, Cassandra Canuck, is an Assistant General Manager for the Vancouver Canucks, a team in the National Hockey League with a long, long.... long history of futility.\n\nCassandra tells you her boss, General Manager Hans Doofenschmirtz, is considering trading this year's first round draft pick for two second round picks and one third round pick from another team. For the purposes of this exercise, let's set the 2023 NHL draft order using the [Tankathon Simulator](https://www.tankathon.com/nhl). The NHL uses a lottery system in which the teams lowest in the standings have the highest odds of getting the first overall pick. I'll simulate the lottery now...\n\nHOLY CRAP! The Vancouver Canucks jump up 6 spots, and will pick FIRST overall. Here is a screenshot:\n\n![](NHLlottery.png)\n\nOur official scenario is this:\n\n**Vancouver receives:** The 7th pick in the second round (39th overall), the 10th pick in the second round (42nd overall), and the 10th pick in the third round (74th overall).\n\n**Detroit receives:** The 1st pick in the first round (1st overall).\n\nDoofenschmirtz reasons that more draft picks are better, and is inclined to make the trade. Cassandra isn't so sure...\n\nShe asks you to create some data visualizations she can show to her boss that might help him make the best decision.\n\n## DIRECTIONS\n\nCreate a new post in your portfolio for this assignment. Call it something cool, like NHL draft analysis, or Hockey Analytics, or John Wick....\n\nCopy the data files from the repository, and maybe also the .qmd file.\n\nUse the .qmd file as the backbone of your assignment, changing the code and the markdown text as you go.\n\n## THE DATA\n\nHow can we evaluate whether trading a first round pick for two second round picks and a third round pick is a good idea? One approach is to look at the historical performance of players from these draft rounds.\n\nI've created a data set that will allow us to explore player performance as a function of draft position. If you are curious as to how I obtained and re-arranged these data, you can check out that tutorial [here](../T6-APIsandJSON/index.qmd). For this assignment, though, I want to focus on the visualizations.\n\n```{r}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\n\nNHLDraft<-read.csv(\"NHLDraft.csv\")\nNHLDictionary<-read_excel(\"NHLDictionary.xlsx\")\n\nknitr::kable(NHLDictionary)\n```\n\nIn this case, we have a dataframe with all the drafted players since 2000, their position, their draft year and position, and then rows for each season since being drafted (`postdraft`). The key variable here is `NHLgames`, which tells us how many games they played in the NHL each season since being drafted.\n\n## SIMPLE SCATTERPLOT\n\nOne thing to realize about professional hockey is that it is pretty rare for a player to play in the NHL right after being drafted. Players get drafted when they are 18 years old, and they usually play in the juniors, minor leagues, or the NCAA for a bit to further develop. Let's use a scatterplot to visualize this phenomenon with the most recent draft classes.\n\n```{r}\ndraft2022<-NHLDraft%>%\n  filter(draftyear==2022 & postdraft==0)\n\nggplot(draft2022, aes(x=round, y=NHLgames))+\n  geom_point()\n\n```\n\nAs you can see, the players drafted in June of 2022 haven't played much this season. There are few things wrong with this visualization, however:\n\n1.  **Overplotting.** All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help?\n2.  **Labelling.** Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3.  **Key-Value pairs:** Looks like we are using \"round\" as a continuous variable. Can we change this to an ordered factor?\n\n## EXPANDED SCATTERPLOT\n\nThe data from the most recent draft isn't really helpful for our question. Let's go back in time and use a draft year that has had some time to develop and reach their potential. How about 2018?\n\n```{r}\ndraft2018<-NHLDraft%>%\n  filter(draftyear==2018 & postdraft<6)\n\nggplot(draft2018, aes(x=round, y=NHLgames))+\n  geom_point()\n\n```\n\nHmmm... in addition to the problem of overplotting, we've got an additional issue here. We actually have two keys and one attribute. The attribute is `NHLgames`, and the keys are `round` and `postdraft`, but we are only using round.\n\nPostdraft indicates the number of seasons after being drafted. We have several choices here. We can make a visualization that uses both keys, or we can somehow summarize the data for one of the keys.\n\nFor example, let's say we just wanted to know the TOTAL number of NHL games played since being drafted.\n\n```{r}\ndrafttot2018<- draft2018%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()\n\ndrafttot<- NHLDraft%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n\nggplot(NHLDraft, aes(x=postdraft, y=NHLgames))+\n  geom_smooth(aes(color=as.factor(round)))\n\nggplot(NHLDraft%>%filter(postdraft<6), aes(x=NHLgames))+\n  geom_histogram()+\n  facet_grid(postdraft~round)\n\n\n```\n\nFine, I guess, but we still have to deal with overplotting, and think about whether a scatterplot really helps us accomplish our task. For this figure do the following:\n\n1.  **Overplotting.** All those points on the y=0 line represent about 32 players each. Can you you think of a way that adding extra channels might help?\n2.  **Labelling.** Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3.  **Key-Value pairs:** Looks like we are using \"round\" as a continuous variable. Can we change this to an ordered factor?\n\n## SCATTERPLOT WITH OVERALL DRAFT POSITION\n\nThis approach might yield a better match with the scatterplot idiom. What if we ignore draft round, and use the player's overall draft position instead?\n\n```{r}\n\nggplot(drafttot2018, aes(x=overall, y=totgames))+\n  geom_point()\n\n```\n\nFor this figure, address the following:\n\n1.  We are trying to address the notion of trading a pick from round 1 for picks from round 2 and 3. Add visual channels to this plot that will help us make that decision.\n2.  Create a caption and better axis labels for this figure.\n3.  What if we wanted to use more than just the 2018 draft class?\n\n## SCATTERPLOT SUMMARY\n\nWe seem to be running into an issue in terms of overplotting. Scatterplots are great, but they work best for two quantitative attributes, and we have a situation with one or two keys and one quantitative attribute. The thing is, scatterplots can be very useful when part of our workflow involves modeling the data in some way. We'll cover this kind of thing in future assignments, but just a bit of foreshadowing here:\n\n```{r}\n\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()+\n  geom_smooth()\n\n```\n\nAdding the smoothed line doesn't eliminate the overplotting problem, but it does indicate that it exists. We'll cover other potential solutions (including Cody's violin plots!) to this issue later in the course, when we get to the notions of faceting and data reduction.\n\n## SIMPLE BAR CHART\n\nOne of the best ways to deal with overplotting is to use our keys to SEPARATE and ORDER our data. Let's do that now. I'll stick with the summarized data for the 2018 draft year for now.\n\n```{r}\nggplot(drafttot2018, aes(x = name, y=totgames))+\n  geom_col()\n\n```\n\nEpic. We now have a bar (column, really) chart with the key being player `name`, and the attribute being the total number of games played. We've SEPARATED the data using the spatial x-axis position channel, and aligned to that axis as well. But this visualization clearly sucks. You need to make it better by:\n\n1.  Adding a visual channel indicating draft round.\n2.  Fixing the order of the x axis.\n3.  Making a caption and better axis labels.\n4.  Fixing the values of the x axis labels so they aren't such a mess.\n\n## STACKED BAR?\n\nStacked bar charts use two keys and one value. Can we leverage this idiom? Perhaps if we used both `round` and `postdraft` as our keys and NHLgames as our value...\n\nThe idea here is that we might be able to get a sense of the temporal pattern of NHL games after a player is drafted. Do first round picks join the NHL earlier? Do they stay in the NHL longer? That kind of thing.\n\n```{r}\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(-round)))+\n  geom_col(position = \"stack\")\n\nNHLDraft <-NHLDraft %>%\n  mutate(descround = desc(as.factor(round)))\n\nrounds<-c(\"darkred\",\"red\",\"pink\", \"violet\", \"lightblue\",\"blue\", \"darkblue\")\n\nggplot(NHLDraft, aes(x = postdraft, y=NHLgames, fill=as.factor(-round), \n                     alpha = as.factor(-round)))+\n  geom_col(position = \"stack\")+\n  theme(legend.position = \"none\")\n\n```\n\nThis seems like it has some potential, but it definitely needs some work (by you):\n\n1.  You know the drill by now. Caption! Labels!\n2.  Improve the color palette.\n3.  Do we really only want data from the 2018 draft class?\n4.  Consider the order of rounds within the stack (glyph). Which round is most important? Change the order within the glyphs to reflect this.\n\n## PIE CHARTS / NORMALIZED BAR CHARTS\n\nWe all know that Pie Charts are rarely a good choice, but let's look at how to make one here. I'll eliminate all the players drafted in 2018 who never played an NHL game, leaving us 80 players drafted in that year who made \"THE SHOW\". Let's look at how those 80 players were drafted:\n\n```{r}\n\nplayedNHL2018 <- drafttot2018%>%\n  filter(totgames>0)\n\nggplot(playedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")\n\n\n```\n\nObviously this isn't great, but can you state why? Write a little critique of this visualizaiton that:\n\n1.  Considers a player who played hundreds of games over their first five years vs a player who played one game in five years.\n2.  Evaluates the relative value of a second round pick and a third round pick.\n\nNow let's change this to account for the various years post draft:\n\n```{r}\nseasonplayedNHL2018 <- draft2018%>%\n  filter(NHLgames>0)\n\n\nggplot(seasonplayedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")+\n  facet_wrap(~postdraft)\n\n```\n\nSeems like there is something to work with here, but let's compare this to a normalized bar chart:\n\n```{r}\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(round)))+\n  geom_col(position = \"fill\")\n\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=overall))+\n  geom_col(position = \"fill\")\n\n```\n\nCan you work with this to make it a useful visualization for your friend, Cassandra Canuck?\n\n## HEATMAP?\n\nCould this be useful?\n\n```{r}\n\nround1<-NHLDraft%>%\n  filter(round==1)\n\nggplot(NHLDraft, aes(y = reorder(name, overall), x = postdraft, fill = NHLgames)) +\n  geom_tile(width = .5, height = 5) +\n  theme(plot.margin = unit(c(0,0,0,0), \"cm\"),\n        axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank())+\n  scale_fill_gradient(low = \"blue\", high = \"red\")\n\nggplot(NHLDraft, aes(y = overall, x = postdraft, z=NHLgames)) + \n  geom_tile(aes(fill=NHLgames)) \n```\n\n## OTHER STUFF TO CONSIDER\n\n1.  Do these visualizations change as a function of player position?\n2.  Is the number of NHL games played really the best metric to use?\n\n## CONCLUSION\n\nBased on your visualizations, what would you advise regarding this trade proposal? Why?\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"spacelab","title-block-banner":true,"title":"ASSIGNMENT 5","subtitle":"Visualizations for Tabular Data","author":"Barrie Robison","date":"2023-03-06","categories":["Assignment","DataViz","Tables","Scatterplot","Barplot","Piechart"],"image":"Cthulhuhockeycard.png","description":"Should I trade these draft picks for this bag of magic beans...?","draft":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}